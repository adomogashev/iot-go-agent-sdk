// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeviceConfigVersionedObject device config versioned object
//
// swagger:model DeviceConfigVersionedObject
type DeviceConfigVersionedObject struct {

	// Creation timestamp with microseconds precision
	// Example: 1257894000000000
	CreatedAt *int64 `json:"created_at,omitempty"`

	// Non typed dictionary for device settings
	// Example: {"key":"value"}
	DeviceConfig interface{} `json:"device_config,omitempty"`

	// device id
	// Example: 1
	// Required: true
	DeviceID *int64 `json:"device_id"`

	// id
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`
}

// Validate validates this device config versioned object
func (m *DeviceConfigVersionedObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeviceConfigVersionedObject) validateDeviceID(formats strfmt.Registry) error {

	if err := validate.Required("device_id", "body", m.DeviceID); err != nil {
		return err
	}

	return nil
}

func (m *DeviceConfigVersionedObject) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this device config versioned object based on context it is used
func (m *DeviceConfigVersionedObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceConfigVersionedObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceConfigVersionedObject) UnmarshalBinary(b []byte) error {
	var res DeviceConfigVersionedObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

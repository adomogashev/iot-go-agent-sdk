// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/vk-cs/iot-go-agent-sdk/gen/swagger/http_client/models"
)

// NewPatchAgentCommandStatusParams creates a new PatchAgentCommandStatusParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchAgentCommandStatusParams() *PatchAgentCommandStatusParams {
	return &PatchAgentCommandStatusParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchAgentCommandStatusParamsWithTimeout creates a new PatchAgentCommandStatusParams object
// with the ability to set a timeout on a request.
func NewPatchAgentCommandStatusParamsWithTimeout(timeout time.Duration) *PatchAgentCommandStatusParams {
	return &PatchAgentCommandStatusParams{
		timeout: timeout,
	}
}

// NewPatchAgentCommandStatusParamsWithContext creates a new PatchAgentCommandStatusParams object
// with the ability to set a context for a request.
func NewPatchAgentCommandStatusParamsWithContext(ctx context.Context) *PatchAgentCommandStatusParams {
	return &PatchAgentCommandStatusParams{
		Context: ctx,
	}
}

// NewPatchAgentCommandStatusParamsWithHTTPClient creates a new PatchAgentCommandStatusParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchAgentCommandStatusParamsWithHTTPClient(client *http.Client) *PatchAgentCommandStatusParams {
	return &PatchAgentCommandStatusParams{
		HTTPClient: client,
	}
}

/* PatchAgentCommandStatusParams contains all the parameters to send to the API endpoint
   for the patch agent command status operation.

   Typically these are written to a http.Request.
*/
type PatchAgentCommandStatusParams struct {

	/* AgentID.

	   Agent ID
	*/
	AgentID int64

	// Body.
	Body *models.PatchCommandStatus

	/* CommandID.

	   Command ID
	*/
	CommandID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch agent command status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchAgentCommandStatusParams) WithDefaults() *PatchAgentCommandStatusParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch agent command status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchAgentCommandStatusParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithTimeout(timeout time.Duration) *PatchAgentCommandStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithContext(ctx context.Context) *PatchAgentCommandStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithHTTPClient(client *http.Client) *PatchAgentCommandStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgentID adds the agentID to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithAgentID(agentID int64) *PatchAgentCommandStatusParams {
	o.SetAgentID(agentID)
	return o
}

// SetAgentID adds the agentId to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetAgentID(agentID int64) {
	o.AgentID = agentID
}

// WithBody adds the body to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithBody(body *models.PatchCommandStatus) *PatchAgentCommandStatusParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetBody(body *models.PatchCommandStatus) {
	o.Body = body
}

// WithCommandID adds the commandID to the patch agent command status params
func (o *PatchAgentCommandStatusParams) WithCommandID(commandID string) *PatchAgentCommandStatusParams {
	o.SetCommandID(commandID)
	return o
}

// SetCommandID adds the commandId to the patch agent command status params
func (o *PatchAgentCommandStatusParams) SetCommandID(commandID string) {
	o.CommandID = commandID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchAgentCommandStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param agent_id
	if err := r.SetPathParam("agent_id", swag.FormatInt64(o.AgentID)); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param command_id
	if err := r.SetPathParam("command_id", o.CommandID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
